{"messages": [{"role": "user","content": "Given the MySQL tables: ###\n##genre(id,name,PRIMARY KEY (id))\n##language(iso_639_1,english_name,name,PRIMARY KEY (iso_639_1))\n##movie_genres(movie_id,genre_ids,KEY (movie_id),CONSTRAINT FOREIGN KEY (movie_id) REFERENCES movie(id))\n##movie(id,adult,backdrop_path,original_language,original_title,overview,popularity,poster_path,release_date,title,video,vote_average,vote_count,PRIMARY KEY (id))###Give the best movie, and the most popular movie in each of the languages###SELECT"}, {"role": "assistant", "content": "l.english_name, MAX(CASE WHEN m.vote_average = max_values.max_vote THEN m.title END) AS best_movie, MAX(CASE WHEN m.popularity = max_values.max_popularity THEN m.title END) AS most_popular_movie FROM `repo`.`movie` m JOIN (SELECT original_language,MAX(vote_average) AS max_vote, MAX(popularity) AS max_popularity FROM `repo`.`movie`GROUP BY original_language) AS max_values ON m.original_language = max_values.original_language JOIN `repo`.`language` l ON m.original_language = l.iso_639_1 GROUP BY m.original_language, l.english_name"}]}
{"messages": [{"role": "user","content": "Given the MySQL tables: ###\n##genre(id,name,PRIMARY KEY (id))\n##language(iso_639_1,english_name,name,PRIMARY KEY (iso_639_1))\n##movie_genres(movie_id,genre_ids,KEY (movie_id),CONSTRAINT FOREIGN KEY (movie_id) REFERENCES movie(id))\n##movie(id,adult,backdrop_path,original_language,original_title,overview,popularity,poster_path,release_date,title,video,vote_average,vote_count,PRIMARY KEY (id))###5 Movies with similar popularity as RRR###SELECT"}, {"role": "assistant", "content": "m.`title`, GROUP_CONCAT(DISTINCT g.`name` ORDER BY g.`name` SEPARATOR ', ') AS `genres`, m.`popularity` FROM `repo`.`movie` m JOIN `repo`.`movie_genres` mg ON m.`id` = mg.`movie_id` JOIN `repo`.`genre` g ON mg.`genre_ids` = g.`id` GROUP BY m.`id`, m.`title`, m.`popularity` ORDER BY ABS(m.`popularity` - (SELECT `popularity` FROM `repo`.`movie` WHERE `title` = 'RRR')) LIMIT 5"}]}
{"messages": [{"role": "user","content": "Given the MySQL tables: ###\n##genre(id,name,PRIMARY KEY (id))\n##language(iso_639_1,english_name,name,PRIMARY KEY (iso_639_1))\n##movie_genres(movie_id,genre_ids,KEY (movie_id),CONSTRAINT FOREIGN KEY (movie_id) REFERENCES movie(id))\n##movie(id,adult,backdrop_path,original_language,original_title,overview,popularity,poster_path,release_date,title,video,vote_average,vote_count,PRIMARY KEY (id))###top 5 languages with the highest average popularity for movies released in the last two years###SELECT"}, {"role": "assistant", "content": "l.`english_name`,   AVG(m.`popularity`) AS `avg_popularity` FROM  `repo`.`language` l  JOIN `repo`.`movie` m ON l.`iso_639_1` = m.`original_language` WHERE YEAR(m.`release_date`) >= YEAR(CURDATE()) - 2  GROUP BY  l.`iso_639_1`, l.`english_name` ORDER BY  `avg_popularity` DESC LIMIT 5;"}]}
{"messages": [{"role": "user","content": "Given the MySQL tables: ###\n##genre(id,name,PRIMARY KEY (id))\n##language(iso_639_1,english_name,name,PRIMARY KEY (iso_639_1))\n##movie_genres(movie_id,genre_ids,KEY (movie_id),CONSTRAINT FOREIGN KEY (movie_id) REFERENCES movie(id))\n##movie(id,adult,backdrop_path,original_language,original_title,overview,popularity,poster_path,release_date,title,video,vote_average,vote_count,PRIMARY KEY (id))###TOP 10 movies with their genres that have a higher popularity than the average popularity of all movies###SELECT"}, {"role": "assistant", "content": "m.`title`, GROUP_CONCAT(DISTINCT g.`name` ORDER BY g.`name` SEPARATOR ', ') AS `genres`, m.`popularity` FROM `repo`.`movie` m JOIN `repo`.`movie_genres` mg ON m.`id` = mg.`movie_id` JOIN `repo`.`genre` g ON mg.`genre_ids` = g.`id` WHERE m.`popularity` > (SELECT AVG(`popularity`) FROM `repo`.`movie`) GROUP BY m.`id`, m.`title`, m.`popularity` ORDER BY m.`popularity` DESC limit 10"}]}
{"messages": [{"role": "user","content": "Given the MySQL tables: ###\n##genre(id,name,PRIMARY KEY (id))\n##language(iso_639_1,english_name,name,PRIMARY KEY (iso_639_1))\n##movie_genres(movie_id,genre_ids,KEY (movie_id),CONSTRAINT FOREIGN KEY (movie_id) REFERENCES movie(id))\n##movie(id,adult,backdrop_path,original_language,original_title,overview,popularity,poster_path,release_date,title,video,vote_average,vote_count,PRIMARY KEY (id))###Find top 10 movie with the most genres###SELECT"}, {"role": "assistant", "content": "m.`title`,GROUP_CONCAT(DISTINCT g.`name` ORDER BY g.`name` SEPARATOR ', ') AS `genres`,COUNT(DISTINCT g.`id`) AS `genre_count` FROM `repo`.`movie` m JOIN `repo`.`movie_genres` mg ON m.`id` = mg.`movie_id` JOIN `repo`.`genre` g ON mg.`genre_ids` = g.`id` GROUP BY m.`id`, m.`title` ORDER BY `genre_count` DESC LIMIT 10"}]}
{"messages": [{"role": "user","content": "Given the MySQL tables: ###\n##genre(id,name,PRIMARY KEY (id))\n##language(iso_639_1,english_name,name,PRIMARY KEY (iso_639_1))\n##movie_genres(movie_id,genre_ids,KEY (movie_id),CONSTRAINT FOREIGN KEY (movie_id) REFERENCES movie(id))\n##movie(id,adult,backdrop_path,original_language,original_title,overview,popularity,poster_path,release_date,title,video,vote_average,vote_count,PRIMARY KEY (id))###latest movie title for each genre###SELECT"}, {"role": "assistant", "content": "g.`name` AS `genre`,MAX(m.`release_date`) AS `latest_release_date`,(SELECT m1.`title` FROM `repo`.`movie` m1 JOIN `repo`.`movie_genres` mg1 ON m1.`id` = mg1.`movie_id` WHERE g.`id` = mg1.`genre_ids` AND m1.`release_date` = MAX(m.`release_date`) LIMIT 1) AS `latest_movie_title` FROM `repo`.`genre` g JOIN `repo`.`movie_genres` mg ON g.`id` = mg.`genre_ids` JOIN `repo`.`movie` m ON mg.`movie_id` = m.`id` GROUP BY g.`id`, g.`name`"}]}
{"messages": [{"role": "user","content": "Given the MySQL tables: ###\n##genre(id,name,PRIMARY KEY (id))\n##language(iso_639_1,english_name,name,PRIMARY KEY (iso_639_1))\n##movie_genres(movie_id,genre_ids,KEY (movie_id),CONSTRAINT FOREIGN KEY (movie_id) REFERENCES movie(id))\n##movie(id,adult,backdrop_path,original_language,original_title,overview,popularity,poster_path,release_date,title,video,vote_average,vote_count,PRIMARY KEY (id))###List the languages along with the total number of movies released in each language, ordered by the number of movies in descending order###SELECT"}, {"role": "assistant", "content": "`language`.`english_name`, COUNT(`movie`.`id`) as `movie_count` FROM `repo`.`language` LEFT JOIN `repo`.`movie` ON `language`.`iso_639_1` = `movie`.`original_language` GROUP BY `language`.`english_name` ORDER BY `movie_count` DESC"}]}
{"messages": [{"role": "user","content": "Given the MySQL tables: ###\n##genre(id,name,PRIMARY KEY (id))\n##language(iso_639_1,english_name,name,PRIMARY KEY (iso_639_1))\n##movie_genres(movie_id,genre_ids,KEY (movie_id),CONSTRAINT FOREIGN KEY (movie_id) REFERENCES movie(id))\n##movie(id,adult,backdrop_path,original_language,original_title,overview,popularity,poster_path,release_date,title,video,vote_average,vote_count,PRIMARY KEY (id))###Find the average vote for each genre, only considering movies with a vote count greater than 100###SELECT"}, {"role": "assistant", "content": "g.name, AVG(m.vote_average) as avg_vote FROM `repo`.`genre` g LEFT JOIN `repo`.`movie_genres` mg ON g.id = mg.genre_ids LEFT JOIN `repo`.`movie` m ON mg.movie_id = m.id WHERE m.vote_count > 100 GROUP BY g.name"}]}
{"messages": [{"role": "user","content": "Given the MySQL tables: ###\n##genre(id,name,PRIMARY KEY (id))\n##language(iso_639_1,english_name,name,PRIMARY KEY (iso_639_1))\n##movie_genres(movie_id,genre_ids,KEY (movie_id),CONSTRAINT FOREIGN KEY (movie_id) REFERENCES movie(id))\n##movie(id,adult,backdrop_path,original_language,original_title,overview,popularity,poster_path,release_date,title,video,vote_average,vote_count,PRIMARY KEY (id))###Give a comparision of ratings of telugu vs tamil movies across different genres###SELECT"}, {"role": "assistant", "content": "`g`.`name` AS `Genre`,AVG(CASE WHEN `l`.`english_name` = 'Telugu' THEN `m`.`vote_average` ELSE NULL END) AS `Telugu_Rating`, AVG(CASE WHEN `l`.`english_name` = 'Tamil' THEN `m`.`vote_average` ELSE NULL END) AS `Tamil_Rating` FROM `repo`.`genre` AS `g` LEFT JOIN `repo`.`movie_genres` AS `mg` ON `g`.`id` = `mg`.`genre_ids` LEFT JOIN `repo`.`movie` AS `m` ON `mg`.`movie_id` = `m`.`id` LEFT JOIN `repo`.`language` AS `l` ON `m`.`original_language` = `l`.`iso_639_1` WHERE `l`.`english_name` IN ('Telugu', 'Tamil') GROUP BY `g`.`name`"}]}
{"messages": [{"role": "user","content": "Given the MySQL tables: ###\n##genre(id,name,PRIMARY KEY (id))\n##language(iso_639_1,english_name,name,PRIMARY KEY (iso_639_1))\n##movie_genres(movie_id,genre_ids,KEY (movie_id),CONSTRAINT FOREIGN KEY (movie_id) REFERENCES movie(id))\n##movie(id,adult,backdrop_path,original_language,original_title,overview,popularity,poster_path,release_date,title,video,vote_average,vote_count,PRIMARY KEY (id))###Which genre has the least average vote in telugu movies###SELECT"}, {"role": "assistant", "content": "g.`name` AS genre_name, AVG(m.`vote_average`) AS avg_vote FROM `repo`.`genre` g JOIN `repo`.`movie_genres` mg ON g.`id` = mg.`genre_ids` JOIN `repo`.`movie` m ON m.`id` = mg.`movie_id` JOIN `repo`.`language` l ON m.`original_language` = l.`iso_639_1` WHERE l.`english_name` = 'Telugu' GROUP BY g.`name` ORDER BY avg_vote LIMIT 1"}]}