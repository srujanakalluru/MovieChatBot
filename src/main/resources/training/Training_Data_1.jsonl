{"messages": [{"role": "user","content": "Given the MySQL tables: ###\n##genre(id,name,PRIMARY KEY (id))\n##language(iso_639_1,english_name,name,PRIMARY KEY (iso_639_1))\n##movie_genres(movie_id,genre_ids,KEY (movie_id),CONSTRAINT FOREIGN KEY (movie_id) REFERENCES movie(id))\n##movie(id,adult,backdrop_path,original_language,original_title,overview,popularity,poster_path,release_date,title,video,vote_average,vote_count,PRIMARY KEY (id))###Recommend a movie similar to Terror on the Prairie###SELECT"}, {"role": "assistant", "content": " m.`title`,m.`overview`,m.`popularity` FROM `repo`.`movie` m JOIN `repo`.`movie_genres` mg ON m.`id` = mg.`movie_id` JOIN `repo`.`genre` g ON mg.`genre_ids` = g.`id` JOIN `repo`.`language` l ON m.`original_language` = l.`iso_639_1` WHERE g.`name` in (SELECT g.`name` FROM `repo`.`movie` m JOIN `repo`.`movie_genres` mg ON m.`id` = mg.`movie_id` JOIN `repo`.`genre` g ON mg.`genre_ids` = g.`id` WHERE m.`title` = 'Terror on the Prairie') AND l.`english_name` = 'English' AND m.`title` != 'Terror on the Prairie' ORDER BY RAND() LIMIT 1"}]}
{"messages": [{"role": "user","content": "Given the MySQL tables: ###\n##genre(id,name,PRIMARY KEY (id))\n##language(iso_639_1,english_name,name,PRIMARY KEY (iso_639_1))\n##movie_genres(movie_id,genre_ids,KEY (movie_id),CONSTRAINT FOREIGN KEY (movie_id) REFERENCES movie(id))\n##movie(id,adult,backdrop_path,original_language,original_title,overview,popularity,poster_path,release_date,title,video,vote_average,vote_count,PRIMARY KEY (id))###Suggest 10 sci-fi english movies###SELECT"}, {"role": "assistant", "content": "  m.`title`,m.`popularity` FROM `repo`.`movie` m INNER JOIN `repo`.`movie_genres` mg ON m.`id` = mg.`movie_id` INNER JOIN `repo`.`genre` g ON mg.`genre_ids` = g.`id` INNER JOIN `repo`.`language` l ON m.`original_language` = l.`iso_639_1` WHERE g.`name` = 'Science Fiction' AND l.`english_name` = 'English' ORDER BY m.`popularity` DESC LIMIT 10"}]}
{"messages": [{"role": "user","content": "Given the MySQL tables: ###\n##genre(id,name,PRIMARY KEY (id))\n##language(iso_639_1,english_name,name,PRIMARY KEY (iso_639_1))\n##movie_genres(movie_id,genre_ids,KEY (movie_id),CONSTRAINT FOREIGN KEY (movie_id) REFERENCES movie(id))\n##movie(id,adult,backdrop_path,original_language,original_title,overview,popularity,poster_path,release_date,title,video,vote_average,vote_count,PRIMARY KEY (id))###Give me all genre names in the order of popularity###SELECT"}, {"role": "assistant", "content": " `genre`.`name` FROM `repo`.`genre` INNER JOIN (SELECT `genre_ids`, COUNT(*) AS `genre_count` FROM `repo`.`movie_genres` INNER JOIN `repo`.`movie` ON `repo`.`movie_genres`.`movie_id` = `repo`.`movie`.`id` GROUP BY `genre_ids` ORDER BY `genre_count` DESC) AS `popular_genres` ON `repo`.`genre`.`id` = `popular_genres`.`genre_ids` ORDER BY `popular_genres`.`genre_count` DESC"}]}
{"messages": [{"role": "user","content": "Given the MySQL tables: ###\n##genre(id,name,PRIMARY KEY (id))\n##language(iso_639_1,english_name,name,PRIMARY KEY (iso_639_1))\n##movie_genres(movie_id,genre_ids,KEY (movie_id),CONSTRAINT FOREIGN KEY (movie_id) REFERENCES movie(id))\n##movie(id,adult,backdrop_path,original_language,original_title,overview,popularity,poster_path,release_date,title,video,vote_average,vote_count,PRIMARY KEY (id))###Which top 10 movies are about police or cops. Give name and language of the movie too###SELECT"}, {"role": "assistant", "content": " m.`title`, l.`name` AS language FROM `repo`.`movie` m INNER JOIN `repo`.`language` l ON m.`original_language` = l.`iso_639_1` WHERE m.`overview` LIKE '%police%' OR m.`overview` LIKE '%cop%' ORDER BY m.`popularity` DESC LIMIT 10"}]}
{"messages": [{"role": "user","content": "Given the MySQL tables: ###\n##genre(id,name,PRIMARY KEY (id))\n##language(iso_639_1,english_name,name,PRIMARY KEY (iso_639_1))\n##movie_genres(movie_id,genre_ids,KEY (movie_id),CONSTRAINT FOREIGN KEY (movie_id) REFERENCES movie(id))\n##movie(id,adult,backdrop_path,original_language,original_title,overview,popularity,poster_path,release_date,title,video,vote_average,vote_count,PRIMARY KEY (id))###Which language produces the least number of movies###SELECT"}, {"role": "assistant", "content": "`language`.`name` AS language_name, COUNT(*) AS movie_count FROM `repo`.`language` LEFT JOIN `repo`.`movie` ON `repo`.`language`.`iso_639_1` = `repo`.`movie`.`original_language` GROUP BY `language_name` ORDER BY movie_count LIMIT 1"}]}
{"messages": [{"role": "user","content": "Given the MySQL tables: ###\n##genre(id,name,PRIMARY KEY (id))\n##language(iso_639_1,english_name,name,PRIMARY KEY (iso_639_1))\n##movie_genres(movie_id,genre_ids,KEY (movie_id),CONSTRAINT FOREIGN KEY (movie_id) REFERENCES movie(id))\n##movie(id,adult,backdrop_path,original_language,original_title,overview,popularity,poster_path,release_date,title,video,vote_average,vote_count,PRIMARY KEY (id))###In the number of movies produced per year, where does telugu language rank###SELECT"}, {"role": "assistant", "content": "`language_name`,`production_rank` FROM (SELECT l.`english_name` AS language_name, (SELECT COUNT(DISTINCT YEAR(`release_date`)) FROM `repo`.`movie` WHERE `original_language` = l.`iso_639_1`) AS production_years_count,(SELECT COUNT(DISTINCT YEAR(`release_date`)) FROM `repo`.`movie` WHERE `original_language` = l.`iso_639_1`) + 1 AS production_rank FROM `repo`.`language` l WHERE l.`iso_639_1` = (SELECT `iso_639_1` FROM `repo`.`language` WHERE `english_name` = 'Telugu')) AS subquery ORDER BY production_rank LIMIT 1 OFFSET 0"}]}
{"messages": [{"role": "user","content": "Given the MySQL tables: ###\n##genre(id,name,PRIMARY KEY (id))\n##language(iso_639_1,english_name,name,PRIMARY KEY (iso_639_1))\n##movie_genres(movie_id,genre_ids,KEY (movie_id),CONSTRAINT FOREIGN KEY (movie_id) REFERENCES movie(id))\n##movie(id,adult,backdrop_path,original_language,original_title,overview,popularity,poster_path,release_date,title,video,vote_average,vote_count,PRIMARY KEY (id))###Which language movies are ranked better - tamil or telugu###SELECT"}, {"role": "assistant", "content": "`language`.`name` AS language_name, AVG(`vote_average`) AS average_rank FROM `repo`.`movie` INNER JOIN `repo`.`language` ON `movie`.`original_language` = `language`.`iso_639_1` WHERE `language`.`english_name` IN ('Tamil', 'Telugu') GROUP BY `language_name` ORDER BY average_rank DESC"}]}
{"messages": [{"role": "user","content": "Given the MySQL tables: ###\n##genre(id,name,PRIMARY KEY (id))\n##language(iso_639_1,english_name,name,PRIMARY KEY (iso_639_1))\n##movie_genres(movie_id,genre_ids,KEY (movie_id),CONSTRAINT FOREIGN KEY (movie_id) REFERENCES movie(id))\n##movie(id,adult,backdrop_path,original_language,original_title,overview,popularity,poster_path,release_date,title,video,vote_average,vote_count,PRIMARY KEY (id))###give top 5 english movie with cats###SELECT"}, {"role": "assistant", "content": "m.`original_title`,m.`overview`,m.`popularity` FROM `repo`.`movie` m INNER JOIN `repo`.`language` l ON m.`original_language`=l.`iso_639_1` WHERE l.`english_name`='English' AND m.`overview` LIKE '%cats%' ORDER BY m.`popularity` DESC LIMIT 5"}]}
{"messages": [{"role": "user","content": "Given the MySQL tables: ###\n##genre(id,name,PRIMARY KEY (id))\n##language(iso_639_1,english_name,name,PRIMARY KEY (iso_639_1))\n##movie_genres(movie_id,genre_ids,KEY (movie_id),CONSTRAINT FOREIGN KEY (movie_id) REFERENCES movie(id))\n##movie(id,adult,backdrop_path,original_language,original_title,overview,popularity,poster_path,release_date,title,video,vote_average,vote_count,PRIMARY KEY (id))###give top 5 movie with cats###SELECT"}, {"role": "assistant", "content": "m.`original_title`,m.`overview`,m.`popularity` FROM `repo`.`movie` m WHERE m.`overview` LIKE '%cats%' ORDER BY m.`popularity` DESC LIMIT 5"}]}
{"messages": [{"role": "user","content": "Given the MySQL tables: ###\n##genre(id,name,PRIMARY KEY (id))\n##language(iso_639_1,english_name,name,PRIMARY KEY (iso_639_1))\n##movie_genres(movie_id,genre_ids,KEY (movie_id),CONSTRAINT FOREIGN KEY (movie_id) REFERENCES movie(id))\n##movie(id,adult,backdrop_path,original_language,original_title,overview,popularity,poster_path,release_date,title,video,vote_average,vote_count,PRIMARY KEY (id))###which genres do telugu language movies not cover###SELECT"}, {"role": "assistant", "content": "g.`name` FROM `repo`.`genre` g WHERE g.`id` NOT IN (SELECT DISTINCT genre_ids FROM `repo`.`movie` m JOIN `repo`.`movie_genres` mg ON m.`id` = mg.`movie_id` JOIN `repo`.`language` l ON m.`original_language` = l.`iso_639_1` WHERE l.`english_name` = 'Telugu') ORDER BY g.`name`"}]}